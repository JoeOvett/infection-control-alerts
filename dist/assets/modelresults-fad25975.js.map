{"version":3,"file":"modelresults-fad25975.js","sources":["../../src/modelresults.js"],"sourcesContent":["/**\r\n * Fetch data from the backend and process it to update the 3D model.\r\n */\r\nfunction fetchData() {\r\n    return fetch('https://jo435.brighton.domains/ci601/get-locations.php')\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            return response.json();\r\n        })\r\n        .catch(error => {\r\n            console.error('There has been a problem with your fetch operation:', error);\r\n        });\r\n}\r\n\r\n/**\r\n * Update the 3D model with data specific to the \"RAE\", \"RCOUR7\", and \"RL14\" sources.\r\n */\r\nfunction update3DModelWithData(data) {\r\n    const raeData = data.filter(item => item.Source.trim() === \"RAE\");\r\n    const rcourData = data.filter(item => item.Source.trim() === \"RCOUR7\");\r\n    const rl14Data = data.filter(item => item.Source.trim() === \"RL14\");\r\n    const sehData = data.filter(item => item.Source.trim() === \"IPICK\");\r\n    const rrenuData = data.filter(item => item.Source.trim() === \"RRENU\");\r\n\r\n\r\n\r\n    raeData.forEach(record => {\r\n        const raePointElement = document.getElementById('rae-point');\r\n        if (raePointElement) {\r\n            // Update the label with the Name\r\n            raePointElement.querySelector('.label').textContent = record.Name || 'A&E Department';\r\n\r\n            // Update the text content with Isolate\r\n            raePointElement.querySelector('.text').innerHTML = `\r\n            <p><strong>Lab No:</strong> ${record.LabNo.trim()}</p>\r\n                <p><strong>Isolate:</strong> ${record.Isolate}</p>\r\n            `;\r\n\r\n            // Ensure the point is visible only after the loading bar overlay has disappeared\r\n            const loadingContainer = document.querySelector('.loading-container');\r\n            if (!loadingContainer.classList.contains('hidden')) {\r\n                // If the loading overlay is still visible, wait for it to disappear\r\n                setTimeout(() => {\r\n                    // Ensure the point is visible\r\n                    raePointElement.classList.add('visible');\r\n                }, 5000); // Adjust the delay as needed\r\n            } else {\r\n                // If the loading overlay is already hidden, ensure the point is visible immediately\r\n                raePointElement.classList.add('visible');\r\n            }\r\n        }\r\n    });\r\n\r\n    rcourData.forEach(record => {\r\n        const rcourPointElement = document.getElementById('rcour-point');\r\n        if (rcourPointElement) {\r\n            // Update the label with the Name\r\n            rcourPointElement.querySelector('.label').textContent = 'Courtyard'; // Change label to \"Courtyard\"\r\n    \r\n            // Update the text content with additional information\r\n            rcourPointElement.querySelector('.text').innerHTML = `\r\n                <p><strong>Isolate:</strong> ${record.Isolate}</p>\r\n                <p><strong>Lab No:</strong> ${record.LabNo.trim()}</p>\r\n            `;\r\n    \r\n            // Ensure the point is visible only after the loading bar overlay has disappeared\r\n            const loadingContainer = document.querySelector('.loading-container');\r\n            if (!loadingContainer.classList.contains('hidden')) {\r\n                // If the loading overlay is still visible, wait for it to disappear\r\n                setTimeout(() => {\r\n                    // Ensure the point is visible\r\n                    rcourPointElement.classList.add('visible');\r\n                }, 5000); // Adjust the delay as needed\r\n            } else {\r\n                // If the loading overlay is already hidden, ensure the point is visible immediately\r\n                rcourPointElement.classList.add('visible');\r\n            }\r\n        }\r\n    });\r\n    \r\n\r\n    rl14Data.forEach(record => {\r\n        const rl14PointElement = document.getElementById('rl14-point');\r\n        if (rl14PointElement) {\r\n            // Update the label with the Name\r\n            rl14PointElement.querySelector('.label').textContent = 'Level 14';\r\n    \r\n            // Update the text content with Isolate\r\n            rl14PointElement.querySelector('.text').innerHTML = `\r\n            <p><strong>Lab No:</strong> ${record.LabNo.trim()}</p>\r\n                <p><strong>Isolate:</strong> ${record.Isolate}</p>\r\n            `;\r\n    \r\n            // Ensure the point is visible only after the loading bar overlay has disappeared\r\n            const loadingContainer = document.querySelector('.loading-container');\r\n            if (!loadingContainer.classList.contains('hidden')) {\r\n                // If the loading overlay is still visible, wait for it to disappear\r\n                setTimeout(() => {\r\n                    // Ensure the point is visible\r\n                    rl14PointElement.classList.add('visible');\r\n                }, 5000); // Adjust the delay as needed\r\n            } else {\r\n                // If the loading overlay is already hidden, ensure the point is visible immediately\r\n                rl14PointElement.classList.add('visible');\r\n            }\r\n        }\r\n    });\r\n    \r\n    sehData.forEach(record => {\r\n        const sehPointElement = document.getElementById('seh-point');\r\n        if (sehPointElement) {\r\n            // Update the label with the Name\r\n            sehPointElement.querySelector('.label').textContent = 'SEH Ward';\r\n    \r\n            // Update the text content with Isolate and Lab No\r\n            sehPointElement.querySelector('.text').innerHTML = `\r\n            <p><strong>Lab No:</strong> ${record.LabNo.trim()}</p>\r\n            <p><strong>Isolate:</strong> ${record.Isolate}</p>\r\n            `;\r\n    \r\n            // Ensure the point is visible only after the loading bar overlay has disappeared\r\n            const loadingContainer = document.querySelector('.loading-container');\r\n            if (!loadingContainer.classList.contains('hidden')) {\r\n                // If the loading overlay is still visible, wait for it to disappear\r\n                setTimeout(() => {\r\n                    // Ensure the point is visible\r\n                    sehPointElement.classList.add('visible');\r\n                }, 5000); // Adjust the delay as needed\r\n            } else {\r\n                // If the loading overlay is already hidden, ensure the point is visible immediately\r\n                sehPointElement.classList.add('visible');\r\n            }\r\n        }\r\n    });\r\n\r\n    rrenuData.forEach(record => {\r\n        const rrenuPointElement = document.getElementById('rrenu-point');\r\n        if (rrenuPointElement) {\r\n            // Update the label with the Name\r\n            rrenuPointElement.querySelector('.label').textContent = 'Renal Unit';\r\n    \r\n            // Update the text content with Lab No and Isolate\r\n            rrenuPointElement.querySelector('.text').innerHTML = `\r\n                <p><strong>Lab No:</strong> ${record.LabNo.trim()}</p>\r\n                <p><strong>Isolate:</strong> ${record.Isolate}</p>\r\n            `;\r\n    \r\n            // Ensure the point is visible only after the loading bar overlay has disappeared\r\n            const loadingContainer = document.querySelector('.loading-container');\r\n            if (!loadingContainer.classList.contains('hidden')) {\r\n                // If the loading overlay is still visible, wait for it to disappear\r\n                setTimeout(() => {\r\n                    // Ensure the point is visible\r\n                    rrenuPointElement.classList.add('visible');\r\n                }, 5000); // Adjust the delay as needed\r\n            } else {\r\n                // If the loading overlay is already hidden, ensure the point is visible immediately\r\n                rrenuPointElement.classList.add('visible');\r\n            }\r\n        }\r\n    });\r\n    \r\n    \r\n    \r\n}\r\n\r\n\r\n/**\r\n * Initiate the data fetch and update the model upon successful data retrieval.\r\n */\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    // Your JavaScript code here\r\n    fetchData().then(data => {\r\n        if (data) {\r\n            update3DModelWithData(data);\r\n        } else {\r\n            console.error('Failed to fetch data or data is empty');\r\n        }\r\n    });\r\n});\r\n"],"names":["fetchData","response","error","update3DModelWithData","data","raeData","item","rcourData","rl14Data","sehData","rrenuData","record","raePointElement","rcourPointElement","rl14PointElement","sehPointElement","rrenuPointElement"],"mappings":"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"}