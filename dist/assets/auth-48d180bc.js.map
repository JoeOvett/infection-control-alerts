{"version":3,"file":"auth-48d180bc.js","sources":["../../src/auth.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    const loginForm = document.querySelector('.login-form');\r\n    const restrictedContent = document.getElementById('restricted-content');\r\n\r\n    // Function to check if the user is logged in\r\n    function isLoggedIn() {\r\n        return !!localStorage.getItem('isLoggedIn'); // Simple check for login state\r\n    }\r\n\r\n// Set the initial state of the restricted content based on login status\r\nfunction updateRestrictedContentVisibility() {\r\n    if (restrictedContent) {\r\n        if (isLoggedIn()) {\r\n            restrictedContent.classList.add('active'); // Add the active class to show the restricted content\r\n            document.getElementById('login-message').style.display = 'none'; // Hide the login message\r\n        } else {\r\n            restrictedContent.classList.remove('active'); // Remove the active class to hide the restricted content\r\n            document.getElementById('login-message').style.display = 'block'; // Show the login message\r\n        }\r\n    }\r\n}\r\n\r\n    updateRestrictedContentVisibility(); // Call the function to set initial visibility\r\n\r\n    // Handle the login form submission\r\n    if (loginForm) {\r\n        loginForm.addEventListener('submit', function(event) {\r\n            event.preventDefault(); // Prevent default form submission\r\n            const formData = new FormData(loginForm);\r\n            const email = formData.get('email');\r\n            const password = formData.get('password');\r\n            \r\n            fetch('https://jo435.brighton.domains/ci601/login.php', {\r\n                method: 'POST',\r\n                credentials: 'include', // Necessary for cookies to be sent and received\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ email, password })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success) {\r\n                    console.log('Login successful');\r\n                    localStorage.setItem('isLoggedIn', true); // Set login state\r\n                    // Set the restricted content to visible and accessible if login is successful\r\n                    if (restrictedContent) {\r\n                        restrictedContent.classList.add('active');\r\n                    }\r\n                    window.location.href = 'https://infection-control-alerts.vercel.app'; // Redirect\r\n                   // window.location.href = 'http://localhost:5173'; // Redirect\r\n\r\n                } else {\r\n                    console.error('Login failed', data.message);\r\n                    document.querySelector('.error-message').textContent = data.message;\r\n                    document.querySelector('.error-message').style.display = 'block';\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n                if (error instanceof SyntaxError) {\r\n                    // Handle unexpected non-JSON response\r\n                    console.error('Unexpected non-JSON response from the server');\r\n                    document.querySelector('.error-message').textContent = 'Login failed due to a server error.';\r\n                } else {\r\n                    // Handle network error or other exceptions\r\n                    console.error('Login failed due to a network error or other exception:', error);\r\n                    document.querySelector('.error-message').textContent = 'Login failed due to a network error or other exception.';\r\n                }\r\n                document.querySelector('.error-message').style.display = 'block';\r\n            });\r\n        });\r\n    }\r\n});\r\n"],"names":["loginForm","restrictedContent","isLoggedIn","updateRestrictedContentVisibility","event","formData","email","password","response","data","error"],"mappings":"AAAA,SAAS,iBAAiB,mBAAoB,IAAM,CAChD,MAAMA,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAoB,SAAS,eAAe,oBAAoB,EAGtE,SAASC,GAAa,CAClB,MAAO,CAAC,CAAC,aAAa,QAAQ,YAAY,CAC7C,CAGL,SAASC,GAAoC,CACrCF,IACIC,EAAU,GACVD,EAAkB,UAAU,IAAI,QAAQ,EACxC,SAAS,eAAe,eAAe,EAAE,MAAM,QAAU,SAEzDA,EAAkB,UAAU,OAAO,QAAQ,EAC3C,SAAS,eAAe,eAAe,EAAE,MAAM,QAAU,SAGrE,CAEIE,IAGIH,GACAA,EAAU,iBAAiB,SAAU,SAASI,EAAO,CACjDA,EAAM,eAAc,EACpB,MAAMC,EAAW,IAAI,SAASL,CAAS,EACjCM,EAAQD,EAAS,IAAI,OAAO,EAC5BE,EAAWF,EAAS,IAAI,UAAU,EAExC,MAAM,iDAAkD,CACpD,OAAQ,OACR,YAAa,UACb,QAAS,CACL,eAAgB,kBACnB,EACD,KAAM,KAAK,UAAU,CAAE,MAAAC,EAAO,SAAAC,CAAQ,CAAE,CACxD,CAAa,EACA,KAAKC,GAAYA,EAAS,MAAM,EAChC,KAAKC,GAAQ,CACNA,EAAK,SACL,QAAQ,IAAI,kBAAkB,EAC9B,aAAa,QAAQ,aAAc,EAAI,EAEnCR,GACAA,EAAkB,UAAU,IAAI,QAAQ,EAE5C,OAAO,SAAS,KAAO,gDAIvB,QAAQ,MAAM,eAAgBQ,EAAK,OAAO,EAC1C,SAAS,cAAc,gBAAgB,EAAE,YAAcA,EAAK,QAC5D,SAAS,cAAc,gBAAgB,EAAE,MAAM,QAAU,QAE7E,CAAa,EACA,MAAMC,GAAS,CACZ,QAAQ,MAAM,SAAUA,CAAK,EACzBA,aAAiB,aAEjB,QAAQ,MAAM,8CAA8C,EAC5D,SAAS,cAAc,gBAAgB,EAAE,YAAc,wCAGvD,QAAQ,MAAM,0DAA2DA,CAAK,EAC9E,SAAS,cAAc,gBAAgB,EAAE,YAAc,2DAE3D,SAAS,cAAc,gBAAgB,EAAE,MAAM,QAAU,OACzE,CAAa,CACb,CAAS,CAET,CAAC"}